		Демоэкзамен

================================================
1 Maven Project (сборщик проектов) (jar, ear, war).
  Основной файл (pom.xml) (dependency)
  
================================================
2 Подключение зависимостей (hibernate-core,
				mysql-connector-java, 
				lombok, 
				junit (4)).

================================================					
3 В папку resources добавить hibernate.cfg.xml (заполнить данными подключения к БД и добавить


<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration >
    <session-factory>

        <property name="hibernate.connection.driver_class">com.mysql.cj.jdbc.Driver</property>
        <property name="hibernate.connection.url">jdbc:mysql://localhost:3306/user_db?serverTimezone=UTC</property>
        <property name="hibernate.connection.username">root</property>
        <property name="hibernate.connection.password">password</property>

        <property name="dialect">org.hibernate.dialect.MySQL8Dialect</property>

        <!--Create table ddl code hibernate-->
        <property name="hibernate.hbm2ddl.auto">create</property>

        <!--Show sql code-->
        <property name="show_sql">true</property>
	<property name="format_sql">true</property>	
        <property name="use_sql_comments">true</property>

        <mapping class="ru.sapteh.model.Role"/>
        <mapping class="ru.sapteh.model.User"/>
        <mapping class="ru.sapteh.model.UserRole"/>

    </session-factory>
</hibernate-configuration>

=======================================================

=========================MVC===========================
4 Создание пакетов ru.sapteh (dao, model, service, 
				controller, view)

4.1
package dao (data access object) -> 
public interface Dao<Entity, Key>{ 
	List<Entity> findByAll();
	Entity findById(Key key);
	void add(Entity entiry);
	void update(Entity entiry);
	void delete(Entity entiry);
}

4.2
package model (создаются классы сущности БД (Класс имеет название, аналогичное названию таблицы в БД) пример Product)

4.3
package service (создаются классы по названию классов сущностей, которые реализуют интерфейс Dao пример: ProductService (ProductDaoImpl))

	public class ProductService implements Dao<Product, Integer>{
		(реализовать все методы интерфейса Dao)
	}

4.4
package controller обработчик форм (создаются классы контроллеры, которые реализуют логику работы графического интерфейса ( пример main.fxml))

Пример resources/view/main.fxml (контроллер будет называться MainController.java)

=======================================================
5 
5.1
Подключение библиотеки file/project structure /libraries/java 
выбираем библиотеку из диска C:/javafx/lib

5.2 Настройки VM options
run/edit configuration (vm options)

--module-path c:/javafx/lib --add-modules javafx.controls,javafx.fxml


=======================================================
6 Создать точку входа в пакете ru.sapteh.AppFX or (Program) or (Main)

public class AppFX extends Application {

	@Override
	public void start(Stage stage) {
		
		Parent root = FXMLload.load(getClass().getResourses("/view/main.fxml"));
		stage.setTitle("English school");
		stage.setScene(new Scene(root));
		stage.show;
	}
	
	public static void main(Stirng[] args){
		launch(args);
	}
}

==========================================================

Дамп базы данных 
mysqldump -u root -p courses > coursesDupm.sql

Восстановление из дампа
mysql -u root -p courses < coursesDupm.sql



====================================================

database name (computerPC_db)

table name (computer)

id
ram
hdd
power_supply
video_card




                         MVC











